diff -ur wlroots.orig/backend/libinput/tablet_pad.c wlroots/backend/libinput/tablet_pad.c
--- wlroots.orig/backend/libinput/tablet_pad.c	2023-02-10 23:29:59.000000000 +0100
+++ wlroots/backend/libinput/tablet_pad.c	2024-06-28 23:27:34.499124855 +0200
@@ -34,7 +34,7 @@
 			++group->ring_count;
 		}
 	}
-	group->rings = calloc(sizeof(unsigned int), group->ring_count);
+	group->rings = calloc(group->ring_count, sizeof(unsigned int));
 	if (group->rings == NULL) {
 		goto group_fail;
 	}
@@ -51,7 +51,7 @@
 			++group->strip_count;
 		}
 	}
-	group->strips = calloc(sizeof(unsigned int), group->strip_count);
+	group->strips = calloc(group->strip_count, sizeof(unsigned int));
 	if (group->strips == NULL) {
 		goto group_fail;
 	}
@@ -67,7 +67,7 @@
 			++group->button_count;
 		}
 	}
-	group->buttons = calloc(sizeof(unsigned int), group->button_count);
+	group->buttons = calloc(group->button_count, sizeof(unsigned int));
 	if (group->buttons == NULL) {
 		goto group_fail;
 	}
diff -ur wlroots.orig/backend/wayland/output.c wlroots/backend/wayland/output.c
--- wlroots.orig/backend/wayland/output.c	2023-02-10 23:29:59.000000000 +0100
+++ wlroots/backend/wayland/output.c	2024-06-28 23:27:34.495791624 +0200
@@ -521,7 +521,7 @@
 	}
 
 	struct wlr_wl_output *output;
-	if (!(output = calloc(sizeof(struct wlr_wl_output), 1))) {
+	if (!(output = calloc(1, sizeof(struct wlr_wl_output)))) {
 		wlr_log(WLR_ERROR, "Failed to allocate wlr_wl_output");
 		return NULL;
 	}
diff -ur wlroots.orig/examples/tablet.c wlroots/examples/tablet.c
--- wlroots.orig/examples/tablet.c	2023-02-10 23:29:59.000000000 +0100
+++ wlroots/examples/tablet.c	2024-06-28 23:27:34.492458394 +0200
@@ -309,7 +309,7 @@
 		xkb_context_unref(context);
 		break;
 	case WLR_INPUT_DEVICE_TABLET_PAD:;
-		struct tablet_pad_state *pstate = calloc(sizeof(struct tablet_pad_state), 1);
+		struct tablet_pad_state *pstate = calloc(1, sizeof(struct tablet_pad_state));
 		pstate->wlr_tablet_pad = wlr_tablet_pad_from_input_device(device);
 		pstate->sample = sample;
 		pstate->destroy.notify = tablet_pad_destroy_notify;
@@ -327,7 +327,7 @@
 		sample->height_mm = tablet->height_mm == 0 ?
 			10 : tablet->height_mm;
 
-		struct tablet_tool_state *tstate = calloc(sizeof(struct tablet_tool_state), 1);
+		struct tablet_tool_state *tstate = calloc(1, sizeof(struct tablet_tool_state));
 		tstate->wlr_tablet = tablet;
 		tstate->sample = sample;
 		tstate->destroy.notify = tablet_tool_destroy_notify;
diff -ur wlroots.orig/examples/touch.c wlroots/examples/touch.c
--- wlroots.orig/examples/touch.c	2023-02-10 23:29:59.000000000 +0100
+++ wlroots/examples/touch.c	2024-06-28 23:27:34.489125164 +0200
@@ -220,7 +220,7 @@
 		xkb_context_unref(context);
 		break;
 	case WLR_INPUT_DEVICE_TOUCH:;
-		struct touch_state *tstate = calloc(sizeof(struct touch_state), 1);
+		struct touch_state *tstate = calloc(1, sizeof(struct touch_state));
 		tstate->wlr_touch = wlr_touch_from_input_device(device);
 		tstate->sample = sample;
 		tstate->destroy.notify = touch_destroy_notify;
